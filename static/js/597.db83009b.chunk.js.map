{"version":3,"file":"static/js/597.db83009b.chunk.js","mappings":"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","sources":["redux/constats/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/filter/filterSelectors.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectContactError = state => state.contacts.error;\nexport const selectContactIsLoading = state => state.contacts.isLoading;\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 20px;\n  gap: 15px;\n  margin: 30px auto 30px;\n  border: 2px solid #1976d2;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectContactError,\n  selectContacts,\n} from 'redux/constats/contactsSelectors';\nimport { addContact } from 'redux/constats/contactsThunk';\nimport { TextField, Button, FormHelperText } from '@mui/material';\nimport { FormStyle } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const error = useSelector(selectContactError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = contacts.some(contact => contact.name === name);\n\n    if (result) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyle onSubmit={handleSubmit}>\n      <h3>Phonebook</h3>\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n        size=\"small\"\n      />\n      <TextField\n        label=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n        size=\"small\"\n      />\n\n      {error && <FormHelperText error>Contacts not found</FormHelperText>}\n      <div>\n        <Button type=\"submit\" children=\"Add contact\" variant=\"outlined\" />\n      </div>\n    </FormStyle>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/constats/contactsThunk';\nimport { Button, ListItem, ListItemText } from '@mui/material';\n\nexport const ContactItem = ({ name, id, phone }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem style={{ borderBottom: '1px solid grey' }}>\n      <ListItemText\n        inset\n        primary={`name: ${name}`}\n        secondary={`phone: ${phone}`}\n      />\n      <Button\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        children=\"Delete\"\n        variant=\"outlined\"\n        size=\"small\"\n      />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/constats/contactsSelectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filterNormalize = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalize)\n    );\n  }\n);\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#1976d2\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n      visible={true}\n    />\n  );\n};\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/constats/contactsThunk';\nimport {\n  selectContactError,\n  selectContactIsLoading,\n} from 'redux/constats/contactsSelectors';\nimport { selectFilteredContacts } from 'redux/filter/filterSelectors';\nimport { List } from '@mui/material';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const contactsIsLoading = useSelector(selectContactIsLoading);\n  const error = useSelector(selectContactError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contactsIsLoading && <Loader />}\n      {error && (\n        <p style={{ color: 'red', margin: 10 }}>The server is not responding</p>\n      )}\n      {filteredContacts.length > 0 && (\n        <List\n          style={{ width: '400px', marginLeft: 'auto', marginRight: 'auto' }}\n        >\n          {filteredContacts.map(({ name, id, number }) => (\n            <ContactItem key={id} name={name} id={id} phone={number} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 400px;\n  margin-bottom: 30px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilterAction } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { TextField } from '@mui/material';\nimport { FilterBox } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(getFilterAction(e.target.value));\n  };\n  return (\n    <FilterBox>\n      <TextField\n        value={filter}\n        name=\"filter\"\n        onChange={handleChangeFilter}\n        size=\"small\"\n        label=\"Find contacts by name\"\n        style={{ width: '100%' }}\n      />\n    </FilterBox>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectContactError","error","selectContactIsLoading","isLoading","FormStyle","styled","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","contact","alert","addContact","TextField","type","label","pattern","title","required","onChange","size","FormHelperText","Button","children","variant","ContactItem","id","phone","ListItem","style","borderBottom","ListItemText","inset","primary","secondary","onClick","deleteContact","selectFilter","filter","selectFilteredContacts","createSelector","filterNormalize","toLowerCase","includes","Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","ContactList","filteredContacts","contactsIsLoading","useEffect","fetchContacts","margin","length","List","marginLeft","marginRight","map","FilterBox","Filter","getFilterAction","target"],"sourceRoot":""}